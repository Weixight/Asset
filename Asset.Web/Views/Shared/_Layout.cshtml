@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Http
@using System.Text;

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
    <link rel="shortcut icon" type="image/x-icon" href="~/assets/img/favicon.ico">
    <title>ALPHABETA - Enterprise </title>
    <link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/font-awesome.min.css">
    <link href="~/assets2/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" type="text/css" href="~/assets/css/dataTables.bootstrap.min.css">
    @*<link href="~/assets/plugins/datatables/plugins/bootstrap/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />*@
    <link href="~/assets2/plugins/datatables/plugins/bootstrap/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" type="text/css" href="~/assets/css/select2.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/bootstrap-datetimepicker.min.css">
    @*<link rel="stylesheet" type="text/css" href="~/assets/plugins/morris/morris.css">*@
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link rel="stylesheet" type="text/css" href="~/assets/plugins/summernote/dist/summernote.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    @*<link rel="stylesheet" type="text/css" href="~/sweetAlert/sweetalert.css" />*@
    @*<script src="~/sweetAlert/sweetalert.min.js"></script>*@
    <!--[if lt IE 9]>
        <script src="assets/js/html5shiv.min.js"></script>
        <script src="assets/js/respond.min.js"></script>
    <![endif]-->
    <style>
        /* The alert message box */
        .alert {
            padding: 20px;
            background-color: #f44336; /* Red */
            color: white;
            margin-bottom: 15px;
        }

        /* The close button */
        .closebtn {
            margin-left: 15px;
            color: white;
            font-weight: bold;
            float: right;
            font-size: 22px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

            /* When moving the mouse over the close button */
            .closebtn:hover {
                color: black;
            }
    </style>
</head>
<body>
    <div class="main-wrapper">
        <div class="header">
            <div class="header-left">
                <a href="index.html" class="logo">
                    @*<img src="~/assets/img/logo.png" width="40" height="40" alt="">*@
                    <img src="~/assets/img/ABC.png" width="40" height="40" alt="" />
                </a>
            </div>
            <div class="page-title-box pull-left">
                <h3>AlphaBeta LLP </h3>
            </div>
            @if (HttpContextAccessor.HttpContext.Session.GetString("LogSession") != null)
            {
                <a id="mobile_btn" class="mobile_btn pull-left" href="#sidebar"><i class="fa fa-bars" aria-hidden="true"></i></a>
                <ul class="nav navbar-nav navbar-right user-menu pull-right">



                    <li class="dropdown">

                        <a href="profile.html" class="dropdown-toggle user-link" data-toggle="dropdown">

                            <span class="user-img">
                                @{
                                    var imgsrc = "";
                                    var Photo = HttpContextAccessor.HttpContext.Session.GetString("Photo")?.ToString();
                                    if (Photo != null)
                                    {
                                        var base64 = Encoding.ASCII.GetBytes(Photo);
                                        //var base64 = Convert.ToBase64String(Model.EmpTbls.Passport);
                                        imgsrc = string.Format("data:image/jpg;Photo,{0}", Photo);
                                    }
                                    else
                                    {

                                    }

                                }

                                <img class="img-circle" src="@imgsrc" width="40">

                                <span class="status online"></span>
                            </span>

                            <span>@HttpContextAccessor.HttpContext.Session.GetString("LogSession").ToString()</span>
                            <i class="caret"></i>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a href="profile.html">My Profile</a></li>
                            <li><a href="edit-profile.html">Edit Profile</a></li>
                            <li><a href="settings.html">Settings</a></li>
                            <li><a asp-controller="Account" asp-action="ChangeUserPassword">Change Password</a></li>
                            <li><a asp-controller="Account" asp-action="Logout">Logout</a></li>
                        </ul>

                    </li>
                </ul>
            }

            else
            {
                <a id="mobile_btn" class="mobile_btn pull-left" href="#sidebar"><i class="fa fa-bars" aria-hidden="true"></i></a>
                <ul class="nav navbar-nav navbar-right user-menu pull-right">





                    <li class="dropdown">

                        <a href="profile.html" class="dropdown-toggle user-link" data-toggle="dropdown">

                            <span class="user-img">
                                <img class="img-circle" src="~/assets/img/user.jpg" width="40" alt="Admin">
                                <span class="status online"></span>
                            </span>

                            <span>Admin</span>
                            <i class="caret"></i>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a href="profile.html">My Profile</a></li>
                            <li><a href="edit-profile.html">Edit Profile</a></li>
                            <li><a href="settings.html">Settings</a></li>
                            <li><a asp-controller="Account" asp-action="Login">Log In</a></li>
                        </ul>

                    </li>

                </ul>
            }

        </div>
        <div class="sidebar" id="sidebar">
            <div class="sidebar-inner slimscroll">
                @if (HttpContextAccessor.HttpContext.Session.GetString("LogSession") != null)
                {


                    @await Component.InvokeAsync("NavigationMenu")

                    <div id="sidebar-menu" class="sidebar-menu">

                    </div>
                }

                else
                {


                }
            </div>
        </div>
        <div class="page-wrapper">
            @{
                string Pending = @HttpContextAccessor.HttpContext.Session.GetString("Pendings")?.ToString();

            }
            @if (Pending != null)
            {
                <div class="alert alert-danger">
                    <strong> @HttpContextAccessor.HttpContext.Session.GetString("Pendings").ToString()</strong>
                </div>
            }
            @RenderBody()
        </div>



    </div>
    <div class="sidebar-overlay" data-reff="#sidebar"></div>
    <script type="text/javascript" src="~/assets/js/jquery-3.2.1.min.js"></script>
    <script type="text/javascript" src="~/assets/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/assets/js/jquery.dataTables.min.js"></script>
    <script src="~/assets/plugins/datatables/plugins/bootstrap/dataTables.bootstrap4.min.js"></script>
    @*<script src="~/assets/js/pages/table/table_data.js"></script>*@
    <script type="text/javascript" src="~/assets2/js/dataTables.bootstrap.min.js"></script>



    <script src="~/assets2/plugins/jquery/jquery.min.js"></script>
    <script src="~/assets2/plugins/popper/popper.js"></script>
    <script src="~/assets2/plugins/jquery-blockui/jquery.blockui.min.js"></script>
    <script src="~/assets2/plugins/jquery-slimscroll/jquery.slimscroll.js"></script>
    <!-- bootstrap -->
    <script src="~/assets2/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/assets2/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
    <!-- data tables -->
    <script src="~/assets/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/assets2/plugins/datatables/plugins/bootstrap/dataTables.bootstrap4.min.js"></script>
    <script src="~/assets2/js/pages/table/table_data.js"></script>
    <!-- Common js-->
    <script src="~/assets2/js/app.js"></script>
    <script src="~/assets2/js/layout.js"></script>
    <script src="~/assets2/js/theme-color.js"></script>
    <!-- Material -->
    <script src="~/assets2/plugins/material/material.min.js"></script>
    <script type="text/javascript" src="~/assets/js/app.js"></script>

    <!--<script type="text/javascript" src="~/assets/js/jquery.slimscroll.js"></script>-->
    <script type="text/javascript" src="~/assets/plugins/morris/morris.min.js"></script>
    <script type="text/javascript" src="~/assets/plugins/raphael/raphael-min.js"></script>
    <script type="text/javascript" src="~/assets/js/select2.min.js"></script>
    <script type="text/javascript" src="~/assets/js/moment.min.js"></script>
    <script type="text/javascript" src="~/assets/js/bootstrap-datetimepicker.min.js"></script>


    <script type="text/javascript" src="~/assets/plugins/summernote/dist/summernote.min.js"></script>
    <script>


        $(document).ready(function () {
            $('.summernote').summernote({
                height: 200,                 // set editor height
                minHeight: null,             // set minimum height of editor
                maxHeight: null,             // set maximum height of editor
                focus: false                 // set focus to editable area after initializing summernote
            });
        });
    </script>
    <script>
        var data = [
            { y: '2014', a: 50, b: 90 },
            { y: '2015', a: 65, b: 75 },
            { y: '2016', a: 50, b: 50 },
            { y: '2017', a: 75, b: 60 },
            { y: '2018', a: 80, b: 65 },
            { y: '2019', a: 90, b: 70 },
            { y: '2020', a: 100, b: 75 },
            { y: '2021', a: 115, b: 75 },
            { y: '2022', a: 120, b: 85 },
            { y: '2023', a: 145, b: 85 },
            { y: '2024', a: 160, b: 95 }
        ],
            config = {
                data: data,
                xkey: 'y',
                ykeys: ['a', 'b'],
                labels: ['Total Asset', 'Total Libility'],
                fillOpacity: 0.6,
                hideHover: 'auto',
                behaveLikeLine: true,
                resize: true,
                pointFillColors: ['#ffffff'],
                pointStrokeColors: ['black'],
                gridLineColor: '#eef0f2',
                lineColors: ['gray', '#667eea']
            };
        config.element = 'area-chart';
        Morris.Area(config);
        config.element = 'line-chart';
        Morris.Line(config);
        config.element = 'bar-chart';
        Morris.Bar(config);
        config.element = 'stacked';
        config.stacked = true;
        Morris.Bar(config);
        Morris.Donut({
            element: 'pie-chart',
            data: [
                { label: "Asset", value: 30 },
                { label: "Liabbility", value: 15 }
              
               
            ]
        });
    </script>



    @RenderSection("Scripts", required: false)

</body>

</html>